[tool.poetry]
name = "RobynScanIQ"
version = "0.1.0"
description = "Pacote RobynScanIQ para OCR e RAG"
authors = ["Anderson Rodrigues <eusouanderson@outlook.com>"]

packages = [
    { include = "RobynScanIQ" }
]

[tool.poetry.dependencies]
python = "^3.10"
robyn = "^0.72.2"
SQLAlchemy = "^2.0.43"
python-dotenv = "^1.1.1"
bcrypt = "^4.3.0"
PyJWT = "^2.10.1"
pydantic = "^2.11.9"
taskipy = "^1.14.1"
alembic = "^1.16.5"
pdf2image = "^1.17.0"
psycopg2-binary = "^2.9.10"
pytesseract = "^0.3.13"
langchain = {extras = ["community"], version = "^0.3.27"}
openai = "^1.108.1"
celery = "^5.5.3"
redis = "^6.4.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.13"
pytest = "^8.4.0"
pytest-cov = "^6.2.1"
watchgod = "^0.8.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.pytest.ini_options]
pythonpath = "."
addopts = "--cov=RobynScanIQ --cov-report=term-missing -p no:warnings"

[tool.taskipy.tasks]
# Lint
lint = "ruff check RobynScanIQ"
pre_format = "ruff check --fix RobynScanIQ"
format = "ruff format RobynScanIQ"
run = "python RobynScanIQ/app.py"

pre_test = "task lint"
test = "pytest -s -x --cov=RobynScanIQ -vv"
post_test = "coverage html"

# Alembic
alembic_init = "alembic init alembic"
alembic_upgrade = "alembic upgrade head"
alembic_downgrade = "alembic downgrade -1"
alembic_revision = "alembic revision --autogenerate -m"

# Desenvolvimento com reload
dev = "python -m robyn RobynScanIQ/app.py --dev --log-level INFO"

# Produção
start_prod = "python RobynScanIQ/app.py --workers 4 --processes 1 --log-level INFO"
